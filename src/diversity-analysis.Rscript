#!/usr/bin/env Rscript

# packages
library("ggplot2")
library("vegan")
library("reshape2")
library("ggpubr")
library("rstatix")
library("dplyr")

# read arguments
args <- commandArgs(trailingOnly=TRUE)
infile <- args[1]
output_dir <- args[2]
taxa_level <- args[3]
evenness_method <- args[4]
dissimilarity_method <- args[5]

# read dataframe
x <- read.table(infile, header=T, row.names=1, sep="\t")

# detect potential rows with only zero counts values
# these make beta diversity calculations impossible
# isolate them for later
all_zero_samples <- as.character(colnames(x[ , colSums(x) == 0]))
all_zero_df <- as.data.frame(matrix(nrow=length(all_zero_samples), ncol=5))
colnames(all_zero_df) <- c("Sample", "Richness", "Evenness", "MDS1", "MDS2")
all_zero_df$Sample <- all_zero_samples
all_zero_df$Richness <- 0
all_zero_df$Evenness <- NA
all_zero_df$MDS1 <- NA
all_zero_df$MDS2 <- NA

# filter them out
x <- x[ , colSums(x) > 0]

# if there are more than one taxon to compute these from
# then compute them
if (dim(x)[1]>1) {

  # ------------------------------------------------------------------------------
  # ALPHA DIVERSITY

  # calculate richness for each sample
  # MARGIN = 1 would compute the counts for each species (rows)
  # MARGIN = 2 computes the counts for each sample (columns)
  alpha_rich <- specnumber(x, MARGIN=2)

  # calculate evenness for every sample
  # same rules apply to the MARGIN parameter
  alpha_div <- diversity(x, index=evenness_method, MARGIN=2)

  # ------------------------------------------------------------------------------
  # BETA DIVERSITY

  # calculate bray-curtis dissimilarity
  # transposing the dataframe  first, to have samples on rows

  transposed_x <- t(x)
  beta_diss <- vegdist(transposed_x, method=dissimilarity_method, binary=TRUE, diag=TRUE, upper=TRUE)

  # perform non-metric multi-dimensional scaling (NMDS) of the dissimilarity
  # using the same distance index used for the dissimilarity
  # in this case: "bray" (i.e. bray-curtis)
  beta_nmds <- metaMDS(beta_diss, distance = dissimilarity_method, plot = FALSE)

  # save points for plotting
  # points correspond to MDS1 and MDS2
  beta_nmds <- as.data.frame(beta_nmds$points)

} else {

  # if there is only one taxon (e.g. "Bacteria")
  # then no dissimilarity can be computed
  # hence, assign "0" for MDS1 and MDS2
  # and remove row names
  # this is needed for later merging of dataframes

  # transpose
  transposed_x <- t(x)
  # alpha
  alpha_rich <- cbind(row.names(transposed_x), 1)
  row.names(alpha_rich) <- row.names(transposed_x)
  alpha_rich <- alpha_rich[,c(2), drop=FALSE]
  # beta
  alpha_div <- cbind(row.names(transposed_x), 0)
  row.names(alpha_div) <- row.names(transposed_x)
  alpha_div <- alpha_div[,c(2), drop=FALSE]
  # nmds
  beta_nmds <- cbind(row.names(transposed_x), 0, 0)
  row.names(beta_nmds) <- row.names(transposed_x)
  beta_nmds <- beta_nmds[,c(2,3)]

}


# ------------------------------------------------------------------------------
# TABLE

# combine diversity values 
x <- cbind(alpha_rich, alpha_div, beta_nmds)
x <- cbind(row.names(x), x)
row.names(x) <- NULL
colnames(x) <- c("Sample", "Richness", "Evenness", "MDS1", "MDS2")
# rejoin the computed values with those defaulted for samples with no counts
# currently saved under "all_zero_df"
x <- rbind(x, all_zero_df)
# write to output
output_file <- paste("RES", taxa_level, "counts.diversity.tsv", sep=".")
outfile <- paste(output_dir, output_file, sep="/")
write.table(x, file=outfile, quote=FALSE, row.names=FALSE, col.names=TRUE, sep="\t")
